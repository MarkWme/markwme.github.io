<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functions on Mark Whitby</title>
    <link>https://markw.me/tags/functions/</link>
    <description>Recent content in Functions on Mark Whitby</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 18 Jan 2017 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://markw.me/tags/functions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Going Serverless with Azure Functions and DocumentDB - Part 2</title>
      <link>https://markw.me/going-serverless-with-azure-functions-and-documentdb-part-2/</link>
      <pubDate>Wed, 18 Jan 2017 09:00:00 +0000</pubDate>
      
      <guid>https://markw.me/going-serverless-with-azure-functions-and-documentdb-part-2/</guid>
      <description>In Part 1 we created an Azure Function that queried the GitHub API to retrieve a list of organisations and write the organisation name, id and URL for their GitHub repos to a queue in Azure Storage. In Part 2, we will write an Azure Function that listens for incoming messages on that queue, queries the GitHub API for details of the repos and then writes the data out to DocumentDB.</description>
    </item>
    
    <item>
      <title>Going Serverless with Azure Functions and DocumentDB - Part 1</title>
      <link>https://markw.me/going-serverless-with-azure-functions-and-documentdb-part-1/</link>
      <pubDate>Tue, 17 Jan 2017 09:00:00 +0000</pubDate>
      
      <guid>https://markw.me/going-serverless-with-azure-functions-and-documentdb-part-1/</guid>
      <description>Today, I had a need to get my head around Azure Functions, so I decided to build a Function App which would take data from a public API and store it in Azure. The idea I came up with was to extract a list of organisations from GitHub and then build a list of some of their repos and star counts and store it in a database.
I came up with the following solution.</description>
    </item>
    
  </channel>
</rss>